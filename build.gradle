// Gradle plugins
buildscript {
    repositories {
        maven {
            name = 'gradle-plugins'
            url = 'https://plugins.gradle.org/m2'
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.0.23'
        classpath 'gradle.plugin.net.minecrell:licenser:0.3'
    }
}

// Create task to resolve SpongeAPI revision
apply from: 'api-revision.gradle'

// Apply shared ForgeGradle configuration
ext.common = project
apply from: 'gradle/minecraft.gradle'

// Inherit SpongeCommon version from SpongeAPI
version = api.version
ext.apiVersion = version

dependencies {
    compile(api) {
        exclude module: 'asm'
    }
    compile(testPlugins) {
        exclude module: 'spongeapi'
    }
    compile 'org.ow2.asm:asm-debug-all:5.2'
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
    }

    // log4j2 slf4j implementation
    runtime 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.1'

    // Database connectors
    compile 'com.zaxxer:HikariCP:2.6.3'
    runtime 'org.mariadb.jdbc:mariadb-java-client:2.0.3'
    compile 'com.h2database:h2:1.4.196'
    runtime 'org.xerial:sqlite-jdbc:3.20.0'

//    forgeGradleMcDeps('net.minecraft:launchwrapper:1.11') {
//        transitive = false
//    }

    // Taken from https://stackoverflow.com/a/7969292
    testCompile api.sourceSets.test.output
}

apply plugin: 'eclipse'
apply plugin: 'net.minecraftforge.gradle.forgedev.patcher'
sourceSets {
    main {
        java {
            srcDir "$rootDir/src/main/java"
        }
        resources {
            srcDir "$rootDir/src/main/resources"
        }
    }
}
repositories {
    mavenLocal()
    mavenCentral()
}
patcher {
    parent = project(':clean')
    patches = file("$rootDir/patches")
    patchedSrc = file('src/main/java')
    srgPatches = true
    serverRun {
        main = "net.minecraft.server.MinecraftServer"
    }
}
applyPatches {
    canonicalizeAccess true
    canonicalizeWhitespace true
    maxFuzz 3
}

task runserver(type: JavaExec) {
    doFirst {
        mkdir 'runserver'
    }
    classpath sourceSets.main.runtimeClasspath
    main settings.servermain
    args 'nogui'
    workingDir 'runserver'
}

task setup() {
    dependsOn ':clean:extractMapped'
    dependsOn ':' + common.name + ':extractMapped'
    //These must be strings so that we can do lazy resolution. Else we need evaluationDependsOnChildren above
}

uploadArchives {
    repositories {
        mavenDeployer {
            pom.whenConfigured {
                pom ->
                    pom.dependencies.
                            removeAll { it.groupId == 'org.spongepowered' && (it.artifactId == 'testplugins' || it.artifactId == 'testmods') }
            }
        }
    }
}

// Include API dependencies in our POM
ext.shadedDevProject = api

test {
    systemProperty 'lwts.tweaker', 'org.spongepowered.common.launch.TestTweaker'
}
